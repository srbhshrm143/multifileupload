{% liquid
  assign photo = theme_settings.logo
  assign photos = '[]' | parse_json
  assign photos = photos | add_to_array: photo | compact
  assign uuid = '' | uuid
  function themes = 'lib/get_available_themes'
  assign current_theme = context.constants.THEME | default: 'simple'
%}
<div class="ms-2 md:border-l sm:flex-grow sm:ps-8 sm:order-2 border-1">
  <div class="mt-5" data-photo-upload-base>
    <h2 class="title">{{ 'admin.themes.logo' | t }}</h2>
    {% render 'theme/simple/photos/uppy_area' %}
  </div>
  <form action="/admin/setup/constants/set" method="post">
    {% render 'authenticity_token', context: context %}
    <input type="hidden" name="_method" value="post" />
    <input type="hidden" name="name" value="theme" />
    <input type="hidden" name="return_to" value="/admin/themes" />

    <div class="flex my-8 items-end">
      <div class="pr-4">
        <label class="flex-1 md:flex-initial md:w-96">{{ 'admin.themes.theme_select' | t }}:</label>
        <select name="value" class="w-full" required>
          {% for theme in themes %}
            <option value="{{ theme.name }}" {% if current_theme == theme.name %} selected {% endif %}>{{ theme.title }}</option>
          {% endfor %}
        </select>
      </div>

      <div class="mt-4 text-right">
        <button type="submit"class="text-sm button">{{ 'app.save' | t }}</button>
      </div>
    </div>
  </form>

  <div>
    <ul>
      {% for theme in themes %}
        {% function theme_settings_url = 'link_to', theme_settings: theme %}
        <li><a class="button mb-2" href="{{ theme_settings_url }}">{{ 'admin.themes.edit_title' | t: theme: theme.title }}</a></li>
      {% endfor %}
    </ul>
  </div>
</div>
{% render 'theme/simple/photos/uppy_form',
  object_uuid: uuid,
  presigned_url: context.presigned_url,
  user_id: current_profile.id
  photo_type: 'theme_logo',
  note: 'Image up to 2MB',
  max_number_of_files: 1,
  existing_photos: photos
%}
