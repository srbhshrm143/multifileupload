{% liquid
  assign name = object.details.en.name

  assign old_details = '{}' | parse_json
  for detail in item.item_details
    assign data = '{}' | parse_json | hash_merge: name: detail.name, description: detail.description
    hash_assign old_details[detail.lang] = data
  endfor

  assign new_details = '{}' | parse_json
  for el in object.details
    assign detail = el[1]
    assign data = '{}' | parse_json | hash_merge: name: detail.name, description: detail.description
    hash_assign new_details[detail.lang] = data
  endfor
  assign diff = old_details | hash_diff: new_details
  if diff.size == 0
    assign create_new_details = false
  else
    assign create_new_details = true
  endif

  if create_new_details
    graphql r = 'items/create_version', args: object
  else
    graphql r = 'items/create_version_without_detail', args: object
  endif

  if r.errors
    log r.errors, type: 'errors.graphql.invalid'
    hash_assign object['valid'] = false
    hash_assign object['errors'] = r.errors
  else
    if create_new_details
      assign item_detail_ids = r.item_details.ids
    else
      assign item_detail_ids = item.item_detail_ids
    endif

    graphql relations = 'items/create_version_fill_relations', item_ids: r.items.ids, item_detail_ids: item_detail_ids
    if relations.errors
      log relations.errors, type: 'errors.graphql.invalid'
      hash_assign object['valid'] = false
      hash_assign object['errors'] = relations.errors
    else
      assign object = r
      hash_assign object['name'] = name
      hash_assign object['valid'] = true
    endif
  endif

  return object
%}
