{% liquid
  function order = 'lib/queries/orders/find', id: order_id
  assign reviews = '' | split: ','

  for line_item in order.line_items
    assign object = '{}' | parse_json
    hash_assign object['item_inventory_id'] = line_item.item.item_inventory.id
    hash_assign object['profile_id'] = order.buyer.id
    hash_assign object['order_id'] = order.id
    function review = 'lib/commands/item_reviews/create', object: object
    if review.valid
      function status = 'lib/commands/statuses/create', profile_id: order.buyer.id, object_id: review.id, name: 'app.statuses.reviews.new', scope: 'app.statuses.reviews'
      assign reviews = reviews | add_to_array: review
    else
      log review, type: "ERROR CREATING REVIEW"
    endif
  endfor


  assign object = '{}' | parse_json
  hash_assign object['organization_id'] = order.seller.id
  hash_assign object['profile_id'] = order.buyer.id
  hash_assign object['order_id'] = order.id
  function org_review = 'lib/commands/organization_reviews/create', object: object
  if org_review.valid
    function status = 'lib/commands/statuses/create', profile_id: order.buyer.id, object_id: org_review.id, name: 'app.statuses.reviews.new', scope: 'app.statuses.reviews'
    assign reviews = reviews | add_to_array: org_review
  else
    log org_review, type: "ERROR CREATING REVIEW"
  endif

  return reviews
%}

