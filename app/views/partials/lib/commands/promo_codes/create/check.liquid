{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'creator_id'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'start_date'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'end_date'
  function c = 'lib/validations/date', c: c, object: object, field_name: 'end_date', can_be_past: false
  if object.start_date and object.end_date
    function c = 'lib/validations/date', c: c, object: object, field_name: 'end_date', greater_than: object.start_date
  endif
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'total_discount'
  function c = 'lib/validations/number',   c: c, object: object, field_name: 'total_discount', gt: 0, lte: 100
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'upper_limit'
  function c = 'lib/validations/number',   c: c, object: object, field_name: 'upper_limit', gte: 0
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'campaign_code'
  function c = 'lib/validations/uniqueness', c: c, object: object, field_name: 'code', table: 'promo_code'

  function c = 'lib/validations/length', c: c, object: object, field_name: 'details', minimum: 1
  for lang in object.details
    assign detail = lang[1]
    assign cd = '{ "errors": {}, "valid": true }' | parse_json
    function cd = 'lib/validations/presence', c: cd, object: detail, field_name: 'description'
    function cd = 'lib/validations/presence', c: cd, object: detail, field_name: 'lang'
    hash_assign detail['errors'] = cd.errors
    hash_assign detail['valid'] = cd.valid
    if cd.valid != true
      hash_assign c['valid'] = false
    endif
  endfor

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}
