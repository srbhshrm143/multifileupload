{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'first_name'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'last_name'
  function c = 'lib/validations/presence', c: c, object: object.user, field_name: 'email'
  function c = 'lib/validations/email', c: c, object: object.user, field_name: 'email'

  if object.user.email != blank and object.user.email != current_profile.user.email
    graphql emails_count = 'users/emails_count', email: object.user.email | dig: 'users', 'total_entries'
    if emails_count > 0
      include 'lib/register_error', contract: c, field_name: 'email', key: 'app.errors.taken'
    endif
  endif

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}
