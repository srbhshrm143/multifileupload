{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'organization_id'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'organization_name'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'email'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'password'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'uuid'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'first_name'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'last_name'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'language'

  if object.email != blank
    graphql emails_count = 'users/emails_count', email: object.email | dig: 'users', 'total_entries'
    function user = 'lib/queries/users/find', email: object.email
    if user
      assign models = '["profile","organization"]' | parse_json
      function rels = 'lib/queries/relationships/search_by_left', l_id: user.profile.id, name: 'organization_membership', model: models, include_related: true
      if rels.total_entries > 0
        include 'lib/register_error', contract: c, field_name: 'email', key: 'app.organizations.errors.user_already_in_organization'
      else
        hash_assign object['profile'] = user.profile
      endif
    endif
  endif

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}
