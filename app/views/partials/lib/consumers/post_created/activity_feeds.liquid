{% liquid
  function group = 'lib/queries/groups/find', id: event.target.id

  if group.content_visible == 'anonymous'
    assign group_is_public = true
  endif

  assign notification_skip_profiles = '[]' | parse_json | add_to_array: event.actor.id

  function audience = 'lib/commands/audience/build'
%}

{% comment %} GROUP FEED {% endcomment %}
{% liquid
  hash_assign audience['public']['group'] = audience['public']['group'] | add_to_array: event.target.id
%}

{% comment %} USER FOLLOWERS {% endcomment %}
{% liquid
  if group_is_public
    function actor = 'lib/queries/activities/users/audience', id: event.actor.id

    hash_assign audience['notifications']['profile'] = audience['notifications']['profile'] | concat: actor['followers']

    hash_assign audience['private']['profile'] = audience['private']['profile'] | concat: actor['followers']
    hash_assign audience['private']['profile'] = audience['private']['profile'] | add_to_array: event.actor.id

    hash_assign audience['public']['profile'] = audience['public']['profile'] | add_to_array: event.actor.id
  endif

%}

{% comment %} POST FOLLOWERS (community) {% endcomment %}
{% liquid
  function post = 'lib/queries/activities/posts/audience', id: event.object.id
  hash_assign audience['notifications']['profile'] = audience['notifications']['profile'] | concat: post.followers
%}

{% comment %} GROUP MEMBERS and OWNER{% endcomment %}
{% liquid
  function group = 'lib/queries/activities/groups/audience', id: event.target.id
  hash_assign audience['private']['profile'] = audience['private']['profile'] | concat: group.members
  hash_assign audience['private']['profile'] = audience['private']['profile'] | concat: group.owners

  hash_assign audience['notifications']['profile'] = audience['notifications']['profile'] | concat: group.members
%}

{% comment %} TAG FOLLOWERS{% endcomment %}
{% liquid
  if group_is_public
    function tag = 'lib/queries/activities/tags/audience', names: group.tags
  endif
%}

{% liquid
  hash_assign audience['notifications']['profile'] = audience['notifications']['profile'] | subtract_array: notification_skip_profiles
  function publish = 'lib/commands/activities/publish_to_many', uuid: event.uuid, audience: audience
%}


{% comment %} system:audit {% endcomment %}
{% render 'lib/commands/activities/publish', uuid: event.uuid, type: "system", ids: "1" %}

{% comment %} system:posts {% endcomment %}
{% render 'lib/commands/activities/publish', uuid: event.uuid, type: "system", ids: "6" %}
