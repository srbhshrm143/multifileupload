{% liquid
  assign c = '{}' | parse_json
  
  if object and do
    case object.type
    
    when 'relationship'
      case object.name
      when 'membership', 'owner'
        function valid = 'lib/can/relationships/memberships', actor: actor, relationship: object, do: do, context: context
      else
        function valid = 'lib/can/relationships', actor: actor, relationship: object, do: do, context: context
      endcase
    when 'group'
      function valid = 'lib/can/groups', actor: actor, group: object, do: do, context: context
    when 'post'
      function valid = 'lib/can/posts', actor: actor, post: object, do: do, context: context
    when 'item_inventory'
      function valid = 'lib/can/item_inventories', actor: actor, item_inventory: object, do: do, context: context
    when 'profile'
      function valid = 'lib/can/profiles', actor: actor, profile: object, do: do, context: context
    when 'item_review', 'organization_review'
      function valid = 'lib/can/reviews', actor: actor, review: object, do: do, context: context
    when 'process'
      function valid = 'lib/can/processes', actor: actor, process: object, do: do, context: context
    when 'project'
      function valid = 'lib/can/projects', actor: actor, project: object, do: do, context: context
    when 'project_offer'
      function valid = 'lib/can/project_offers', actor: actor, project_offer: object, do: do, context: context
    when 'photo'
      function valid = 'lib/can/photos', actor: actor, photo: object, do: do, context: context
    when 'document'
      function valid = 'lib/can/documents', actor: actor, document: object, do: do, context: context
    when 'organization'
      function valid = 'lib/can/organizations', actor: actor, organization: object, do: do, context: context
    when 'comment'
      function valid = 'lib/can/comments', actor: actor, comment: object, do: do, context: context
    when 'venue_rooms'
      function valid = 'lib/can/test_item', actor: actor, object: object, do: do, context: context
    else
      assign valid = false
    endcase
  else
    assign valid = false
  endif
%}

{% capture msg -%}
  Profile#{{ actor.id | default: 'noID' }} cannot {{ do }} {{ object.type | default: 'type-unknown' }}#{{ object.id | defalt: 'noID'}}
{%- endcapture %}

{% liquid
  unless valid
    hash_assign c['errors'] = '{ "permission_denied": [] }' | parse_json
    hash_assign c['errors']['permission_denied'][0] = msg
  endunless
  hash_assign c['valid'] = valid

  return c
%}
