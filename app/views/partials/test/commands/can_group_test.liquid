{% liquid
  assign actor = '{"id":1000}' | parse_json
  assign object = '{"id":2000, "type":"group"}' | parse_json

  function result = 'lib/can', actor: actor, do: 'join', object: object
  include 'test/assertions/not_valid_object', contract: contract, object: result, field_name: 'result0'
  include 'test/assertions/presence', contract: contract, object: result.errors, field_name: 'permission_denied'
%}


{% liquid
  assign actor = '{"id":1001}' | parse_json
  assign object = '{"id":2001, "type":"group", "ask_to_join": "yes", "approve_request": "anonymous" }' | parse_json

  function result = 'lib/can', actor: actor, do: 'join', object: object
  include 'test/assertions/valid_object', contract: contract, object: result, field_name: 'result1'
  include 'test/assertions/blank', contract: contract, object: result, field_name: 'errors'
%}


{% liquid
  assign actor = '{"id":1003}' | parse_json
  assign object = '{"id":2003, "type":"group", "ask_to_join": "no" }' | parse_json

  function result = 'lib/can', actor: actor, do: 'join', object: object
  include 'test/assertions/not_valid_object', contract: contract, object: result, field_name: 'result3'
  include 'test/assertions/presence', contract: contract, object: result.errors, field_name: 'permission_denied'
%}


{% liquid
  assign actor = '{"id": "1002", "relationships": {"owner": [], "membership": []}}' | parse_json
  assign membership = '{"id": "2000", "type":"relationship", "name": "membership", "r_id": "2002", "l_id": "1002", "r": { "id": "2002", "type": "group" }, "l_accepted_at": "now", "r_accepted_at": "now", "valid": true}' | parse_json
  hash_assign actor['relationships']['membership'] = actor['relationships']['membership'] | add_to_array: membership

  assign object = '{"id": "2002", "type": "group", "post_content": "member" }' | parse_json

  function result = 'lib/can', actor: actor, do: 'post', object: object
  include 'test/assertions/valid_object', contract: contract, object: result, field_name: 'result'
%}

{% comment %}can't post when not member of group{% endcomment %}
{% liquid
  assign actor = '{"id": "1002", "relationships": {"owner": [], "membership": []}}' | parse_json
  assign object = '{"id":2002, "type": "group", "post_content": "member" }' | parse_json

  function result = 'lib/can', actor: actor, do: 'post', object: object
  include 'test/assertions/not_valid_object', contract: contract, object: result, field_name: 'result'
%}
