{% parse_json buyer %} {"id": "5"} {% endparse_json %}
{% liquid
  function item = 'test/fixtures/item', quantity: 3, max_in_one_order: 3, contract: contract
  function order = 'test/fixtures/order', current_profile: buyer, item: item
%}
{% comment %} test {% endcomment %}
{% liquid
  function line_item = 'lib/commands/line_items/create', item: item, quantity: 2, current_profile: buyer, order: order
  include 'test/assertions/valid_object', contract: contract, object: line_item, field_name: 'line_item_create'
  assign params = '{"quantity": 3}' | parse_json
%}
{% comment %} test {% endcomment %}
{% liquid
  function line_item = 'lib/commands/line_items/update', object: params, line_item: line_item

  include 'test/assertions/valid_object', contract: contract, object: line_item, field_name: 'line_item_update'
  include 'test/assertions/equal', contract: contract, given: line_item.total_price_cents, field_name: 'total_price_cents', expected: 3000

  assign params = '{"quantity": 4}' | parse_json
  function line_item = 'lib/commands/line_items/update', object: params, line_item: line_item
  function contract = 'test/assertions/not_valid_object', contract: contract, object: object, field_name: 'id'
  function contract = 'test/assertions/equal', contract: contract, field_name: 'errors', given: line_item.errors.quantity[0], expected: "The quantity youâ€™ve choosen is not available."

%}
