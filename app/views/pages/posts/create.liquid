---
slug: posts
method: post
---
{% liquid
  function current_profile = 'lib/current_profile', user_id: context.current_user.id, membership: true
  include 'lib/profile_present_or_redirect', profile: current_profile

  assign object = context.params.post
  if object.group_id == current_profile.id
    function group = 'lib/commands/groups/find_or_create_for_profile', profile: current_profile
  else
    function group = 'lib/queries/groups/find', id: object.group_id, with_owner: true
  endif
  include 'lib/can_do_or_unauthorized', object: group, do: "post", actor: current_profile

  hash_assign object['group_id'] = group.id
  function object = 'lib/commands/posts/create', object: object, current_profile: current_profile
  if object.valid
    function _event = 'lib/commands/events/create', type: 'post_created', actor_id: current_profile.id, object_id: object.id, target_id: object.group_id, delay: 0
    include 'redirect_to', url: context.params.return_to, notice: 'app.posts.create.success'
  else
    log object.errors, type: 'ERROR: posts/create'
    include 'redirect_to', url: context.params.return_to, error: 'app.posts.create.failed'
  endif
%}
