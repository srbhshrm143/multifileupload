---
slug: groups/:id/content
method: post
---
{% liquid
  function current_profile = 'lib/current_profile', user_id: context.current_user.id, membership: true
  include 'lib/profile_present_or_redirect', profile: current_profile

  assign group_id = context.params.id | split: '-' | last
  function group = 'lib/queries/groups/find', id: group_id, with_owner: true
  include 'lib/can_do_or_unauthorized', object: group, do: "post", actor: current_profile

  function object = 'lib/commands/posts/create', object: context.params.post, current_profile: current_profile
  if object.valid
    function evt = 'lib/commands/events/create', type: 'post_created', actor_id: current_profile.id, object_id: object.id

    assign now = 'now' | to_time
    function relation = 'lib/commands/relationships/create', name: 'followship', l_id: current_profile.id, r_id: object.id, l_at: now, r_at: now

    function url = 'link_to', object: object
    redirect_to url
  else
    graphql presigned_url = 'photos/presign' | dig: 'presigned'
    render 'theme/simple/groups/content/new', object: object, presigned_url: presigned_url, group: group, context: context
  endif
%}
