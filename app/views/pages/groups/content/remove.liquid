---
slug: groups/:group_id/content/:post_id/remove
method: delete
---
{% liquid
  function current_profile = 'lib/current_profile', user_id: context.current_user.id
  include 'lib/profile_present_or_redirect', profile: current_profile
  
  assign group_id = context.params.group_id | split: '-' | last
  function group = 'lib/queries/groups/find', id: group_id, with_owner: true
  
  assign post_id = context.params.post_id | split: '-' | last
  function post = 'lib/queries/posts/find', id: post_id, group_id: group_id
  include 'lib/can_do_or_unauthorized', object: post, do: "delete", actor: current_profile
  
  function object = 'lib/commands/posts/remove', object: post
  if object.valid
    function _event = 'lib/commands/events/create', type: 'post_deleted', object_id: post.id
    include 'redirect_to', url: '/groups/{{group_id}}/content', notice: 'app.models.shared.deleted'
  else
    include 'redirect_to', url: '/groups/{{group_id}}/content', error: 'app.models.shared.delete_failed'
  endif
%}
