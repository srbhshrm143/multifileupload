query search(
  $id: ID
  $limit: Int = 20
  $uuid: String
  $commentable_uuid: String
  $commentable_uuids: [String]
  $commentable_type: String
  $creator_id: String
  $query: String
) {
  comments: records(
    per_page: $limit
    filter: {
      id: { value: $id }
      table: { value: "comment" }
      properties: [
        { name: "uuid" value: $uuid }
        { name: "commentable_uuid" value: $commentable_uuid, value_in: $commentable_uuids }
        { name: "commentable_type" value: $commentable_type }
        { name: "creator_id" value: $creator_id }
        { name: "title" contains: $query }
        { name: "body" contains: $query }
      ]
    }
    sort: [
      { created_at: { order: DESC }}
    ]
  ){
    total_entries
    results {
      id
      created_at
      type: table
      uuid: property(name: "uuid")
      title: property(name: "title")
      body: property(name: "body")
      removed_at: property(name: "removed_at")

      commentable: related_record(table: ["profile", "item", "group", "comment"], join_on_property: "commentable_uuid", foreign_property: "uuid") {
        type: table
        id
        slug: property(name: "slug")
        name: property(name: "name")
      }

      photos: related_records(table: "photo", join_on_property: "uuid", foreign_property: "object_uuid") {
        id
        photo_width: property_int(name: "photo_width")
        photo_height: property_int(name: "photo_height")
        photo: property_upload(name: "photo") {
          url
          versions
        }
      }

      creator: related_record(table: "profile", join_on_property: "creator_id"){
        ...profile
      }
    }
  }
}

fragment profile on Record {
  id
  name: property(name: "name")
  first_name: property(name: "first_name")
  last_name: property(name: "last_name")
  slug: property(name: "slug")
  avatar: related_record(table: "photo", join_on_property: "uuid", foreign_property: "object_uuid", filter: { properties: { name: "photo_type", value: "avatar"}}) {
    photo_width: property_int(name: "photo_width")
    photo_height: property_int(name: "photo_height")
    photo: property_upload(name: "photo") {
      url
      versions
    }
  }
}
