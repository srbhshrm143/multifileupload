mutation create_comment(
  $uuid: String!
  $commentable_uuid: String
  $commentable_type: String
  $creator_id: String!
  $title: String
  $body: String!
  $removed_at: String
) {
  record: record_create(
    record: {
      table: "comment"
      properties: [
        { name: "uuid" value: $uuid }
        { name: "commentable_uuid" value: $commentable_uuid }
        { name: "commentable_type" value: $commentable_type }
        { name: "creator_id" value: $creator_id }
        { name: "title" value: $title }
        { name: "body" value: $body }
        { name: "removed_at" value: $removed_at }
      ]
    }
  ){
    id
    created_at
    deleted_at

    properties
    uuid: property(name: "uuid")
    commentable_uuid: property(name: "commentable_uuid")
    commentable_type: property(name: "commentable_type")
    creator_id: property(name: "creator_id")
    title: property(name: "title")
    body: property(name: "body")
    removed_at: property(name: "removed_at")

    creator: related_record(table: "profile", join_on_property: "creator_id"){
      ...profile
    }
  }
}

fragment profile on Record {
  id
  name: property(name: "name")
  first_name: property(name: "first_name")
  last_name: property(name: "last_name")
  slug: property(name: "slug")
  avatar: related_record(table: "photo", join_on_property: "uuid", foreign_property: "object_uuid", filter: { properties: { name: "photo_type", value: "avatar"}}) {
    photo_width: property_int(name: "photo_width")
    photo_height: property_int(name: "photo_height")
    photo: property_upload(name: "photo") {
      url
      versions
    }
  }
}
