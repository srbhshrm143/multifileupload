query search(
  $id: ID,
  $limit: Int = 20,
  $member_id: String
  $meta_visible: String
  $relationships: Boolean = false
  $without_group_type: String
  $group_type: String
  $with_owner: Boolean = false
) {
  groups: records(
    per_page: $limit
    filter: {
      id: { value: $id }
      table: { value: "group" }
      properties: [
        { name: "meta_visible", value: $meta_visible }
        { name: "group_type", not_value: $without_group_type }
        { name: "group_type", value: $group_type }
      ]
      related_records: {
        join: { join_on_property: "id", foreign_property: "r_id"}
        filter: {
          table: { value: "relationship" },
          properties: [
            { name: "l_id", value: $member_id }
            { name: "name", value: "membership" }
          ]
        }
      }
    }
    sort: [
      { created_at: { order: DESC }}
    ]
  ){
    total_entries

    results {
      ...group
    }
  }
}

fragment group on Record {
  id
  created_at
  type: table

  uuid: property(name: "uuid")
  name: property(name: "name")
  summary: property(name: "summary")
  description: property(name: "description")
  code_of_conduct: property(name: "code_of_conduct")
  content_type: property(name: "content_type")
  content_types: property_array(name: "content_types")
  group_type: property(name: "group_type")
  ask_to_join: property(name: "ask_to_join")
  meta_visible: property(name: "meta_visible")
  content_visible: property(name: "content_visible")
  approve_request: property(name: "approve_request")
  post_content: property(name: "post_content")
  invite_member: property(name: "invite_member")
  tags: property_array(name: "tags")
  c__members_count: property_int(name: "c__members_count")
  c__posts_count: property_int(name: "c__posts_count")

  main_photo: related_record(table: "photo", join_on_property: "uuid", foreign_property: "object_uuid") {
    id
    photo_width: property_int(name: "photo_width")
    photo_height: property_int(name: "photo_height")
    photo: property_upload(name: "photo") {
      url
      versions
    }
  }
  owner: related_record(
    table: "relationship"
    join_on_property: "id"
    foreign_property: "r_id"
    filter: { properties: { value: "owner", name: "name" } }
  ) @include(if: $with_owner) {
    id
    properties
    profile: related_record(table: "profile", join_on_property: "l_id") {
      id
      username: property(name: "username")
      first_name: property(name: "first_name")
      last_name: property(name: "last_name")
      slug: property(name: "slug")
      avatar: related_record(
        table: "photo"
        join_on_property: "uuid"
        foreign_property: "object_uuid"
        filter: { properties: { name: "photo_type", value: "avatar" } }
      ) {
        photo_width: property_int(name: "photo_width")
        photo_height: property_int(name: "photo_height")
        photo: property_upload(name: "photo") {
          url
          versions
        }
      }
    }
  }

  relationships: related_records(table: "relationship" join_on_property: "id" foreign_property: "r_id") @include(if: $relationships) {
    id
    name: property(name: "name")
    r_id: property(name: "r_id")
    l_id: property(name: "l_id")
  }
}
